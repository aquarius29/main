GAS LISTING /tmp/ccUEW0Hz.s 			page 1


   1               		.file	"test.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.stabs	"/home/alina/ca/magn/",100,0,2,.Ltext0
   9               		.stabs	"test.c",100,0,2,.Ltext0
  10               		.text
  11               	.Ltext0:
  12               		.stabs	"gcc2_compiled.",60,0,0,0
  13               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,1,0
  14               		.stabs	"char:t(0,2)=r(0,2);0;127;",128,0,1,0
  15               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,1,0
  16               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,1,0
  17               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,1,0
  18               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,1,
  19               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,1,0
  20               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,1,0
  21               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,1,0
  22               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,1,0
  23               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,1,0
  24               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,1,0
  25               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,1,0
  26               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,1,0
  27               		.stabs	"void:t(0,15)=(0,15)",128,0,1,0
  28               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/avr/io.h",130,0,0,0
  29               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/avr/sfr_defs.h",130,0,0,0
  30               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/inttypes.h",130,0,0,0
  31               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/stdint.h",130,0,0,0
  32               		.stabs	"int8_t:t(4,1)=(0,10)",128,0,121,0
  33               		.stabs	"uint8_t:t(4,2)=(0,11)",128,0,122,0
  34               		.stabs	"int16_t:t(4,3)=(0,1)",128,0,123,0
  35               		.stabs	"uint16_t:t(4,4)=(0,4)",128,0,124,0
  36               		.stabs	"int32_t:t(4,5)=(0,3)",128,0,125,0
  37               		.stabs	"uint32_t:t(4,6)=(0,5)",128,0,126,0
  38               		.stabs	"int64_t:t(4,7)=(0,6)",128,0,128,0
  39               		.stabs	"uint64_t:t(4,8)=(0,7)",128,0,129,0
  40               		.stabs	"intptr_t:t(4,9)=(4,3)",128,0,142,0
  41               		.stabs	"uintptr_t:t(4,10)=(4,4)",128,0,147,0
  42               		.stabs	"int_least8_t:t(4,11)=(4,1)",128,0,159,0
  43               		.stabs	"uint_least8_t:t(4,12)=(4,2)",128,0,164,0
  44               		.stabs	"int_least16_t:t(4,13)=(4,3)",128,0,169,0
  45               		.stabs	"uint_least16_t:t(4,14)=(4,4)",128,0,174,0
  46               		.stabs	"int_least32_t:t(4,15)=(4,5)",128,0,179,0
  47               		.stabs	"uint_least32_t:t(4,16)=(4,6)",128,0,184,0
  48               		.stabs	"int_least64_t:t(4,17)=(4,7)",128,0,192,0
  49               		.stabs	"uint_least64_t:t(4,18)=(4,8)",128,0,199,0
  50               		.stabs	"int_fast8_t:t(4,19)=(4,1)",128,0,213,0
  51               		.stabs	"uint_fast8_t:t(4,20)=(4,2)",128,0,218,0
  52               		.stabs	"int_fast16_t:t(4,21)=(4,3)",128,0,223,0
  53               		.stabs	"uint_fast16_t:t(4,22)=(4,4)",128,0,228,0
  54               		.stabs	"int_fast32_t:t(4,23)=(4,5)",128,0,233,0
  55               		.stabs	"uint_fast32_t:t(4,24)=(4,6)",128,0,238,0
  56               		.stabs	"int_fast64_t:t(4,25)=(4,7)",128,0,246,0
  57               		.stabs	"uint_fast64_t:t(4,26)=(4,8)",128,0,253,0
GAS LISTING /tmp/ccUEW0Hz.s 			page 2


  58               		.stabs	"intmax_t:t(4,27)=(4,7)",128,0,273,0
  59               		.stabs	"uintmax_t:t(4,28)=(4,8)",128,0,278,0
  60               		.stabn	162,0,0,0
  61               		.stabs	"int_farptr_t:t(3,1)=(4,5)",128,0,77,0
  62               		.stabs	"uint_farptr_t:t(3,2)=(4,6)",128,0,81,0
  63               		.stabn	162,0,0,0
  64               		.stabn	162,0,0,0
  65               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/avr/fuse.h",130,0,0,0
  66               		.stabs	"__fuse_t:t(5,1)=(5,2)=s3low:(0,11),0,8;high:(0,11),8,8;extended:(0,11),16,8;;",128,0,244,0
  67               		.stabn	162,0,0,0
  68               		.stabn	162,0,0,0
  69               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/stdio.h",130,0,0,0
  70               		.stabs	"/usr/lib/gcc/avr/4.3.5/include/stdarg.h",130,0,0,0
  71               		.stabs	"__gnuc_va_list:t(7,1)=(7,2)=*(0,15)",128,0,43,0
  72               		.stabs	"va_list:t(7,3)=(7,1)",128,0,105,0
  73               		.stabn	162,0,0,0
  74               		.stabs	"/usr/lib/gcc/avr/4.3.5/include/stddef.h",130,0,0,0
  75               		.stabs	"size_t:t(8,1)=(0,4)",128,0,214,0
  76               		.stabn	162,0,0,0
  77               		.stabs	"__file:T(6,1)=s14buf:(6,2)=*(0,2),0,16;unget:(0,11),16,8;flags:(4,2),24,8;size:(0,1),32,16
  78               		.stabn	162,0,0,0
  79               		.stabs	"/home/alina/ca/magn/Make-dir/libarduino.h",130,0,0,0
  80               		.stabs	"pinmode:T(9,1)=eINPUT:0,OUTPUT:1,;",128,0,0,0
  81               		.stabs	"pinstate:T(9,2)=eLOW:0,HIGH:1,;",128,0,0,0
  82               		.stabn	162,0,0,0
  83               		.stabs	"/home/alina/ca/magn/Make-dir/WProgram.h",130,0,0,0
  84               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/stdlib.h",130,0,0,0
  85               		.stabs	"/usr/lib/gcc/avr/4.3.5/include/stddef.h",130,0,0,0
  86               		.stabs	"wchar_t:t(12,1)=(0,1)",128,0,326,0
  87               		.stabn	162,0,0,0
  88               		.stabs	"div_t:t(11,1)=(11,2)=s4quot:(0,1),0,16;rem:(0,1),16,16;;",128,0,71,0
  89               		.stabs	"ldiv_t:t(11,3)=(11,4)=s8quot:(0,3),0,32;rem:(0,3),32,32;;",128,0,77,0
  90               		.stabs	"__compar_fn_t:t(11,5)=(11,6)=*(11,7)=f(0,1)",128,0,80,0
  91               		.stabn	162,0,0,0
  92               		.stabs	"/home/alina/ca/magn/Make-dir/wiring.h",130,0,0,0
  93               		.stabs	"word:t(13,1)=(0,4)",128,0,93,0
  94               		.stabs	"boolean:t(13,2)=(4,2)",128,0,97,0
  95               		.stabs	"byte:t(13,3)=(4,2)",128,0,98,0
  96               		.stabn	162,0,0,0
  97               		.stabn	162,0,0,0
  98               		.data
  99               	.LC0:
 100 0000 783A 2025 		.string	"x: %d\ny: %d\nz: %d\n"
 100      640A 793A 
 100      2025 640A 
 100      7A3A 2025 
 100      640A 00
 101               		.section	.text.main,"ax",@progbits
 102               		.stabs	"main:F(0,1)",36,0,8,main
 103               	.global	main
 104               		.type	main, @function
 105               	main:
 106               		.stabd	46,0,0
   1:test.c        **** #include <avr/io.h>
   2:test.c        **** #include <stdio.h>
   3:test.c        **** #include <util/delay.h>
   4:test.c        **** #include <avr/interrupt.h>
GAS LISTING /tmp/ccUEW0Hz.s 			page 3


   5:test.c        **** #include <libarduino.h>
   6:test.c        **** #include <WProgram.h>
   7:test.c        **** 
   8:test.c        **** int main (void){
 107               		.stabn	68,0,8,.LM0-.LFBB1
 108               	.LM0:
 109               	.LFBB1:
 110 0000 CF92      		push r12
 111 0002 DF92      		push r13
 112 0004 EF92      		push r14
 113 0006 FF92      		push r15
 114 0008 0F93      		push r16
 115 000a 1F93      		push r17
 116 000c CF93      		push r28
 117 000e DF93      		push r29
 118               	/* prologue: function */
 119               	/* frame size = 0 */
   9:test.c        **** 
  10:test.c        **** 	uint16_t x,y,z;
  11:test.c        **** 	serial_init();
 120               		.stabn	68,0,11,.LM1-.LFBB1
 121               	.LM1:
 122 0010 0E94 0000 		call serial_init
  12:test.c        **** 	fdevopen(serial_putchar, serial_getchar);
 123               		.stabn	68,0,12,.LM2-.LFBB1
 124               	.LM2:
 125 0014 80E0      		ldi r24,lo8(gs(serial_putchar))
 126 0016 90E0      		ldi r25,hi8(gs(serial_putchar))
 127 0018 60E0      		ldi r22,lo8(gs(serial_getchar))
 128 001a 70E0      		ldi r23,hi8(gs(serial_getchar))
 129 001c 0E94 0000 		call fdevopen
 130               	.LBB18:
 131               	.LBB19:
 132               	.LBB20:
 133               	.LBB21:
 134               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext1
 135               	.Ltext1:
   1:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    All rights reserved.
   4:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
   5:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
   8:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  11:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      distribution.
  15:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  16:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  20:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
GAS LISTING /tmp/ccUEW0Hz.s 			page 4


  21:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  32:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h,v 1.1 2007/05/13 21:23:20 joerg_wunsch Exp $ */
  33:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  34:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  37:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  39:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /** \file */
  40:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  41:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     \code
  42:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  43:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     \endcode
  44:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  45:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  46:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  47:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  48:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  49:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  50:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  51:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  52:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  53:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  54:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  55:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  56:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  57:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  58:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     to the overall delay time.
  59:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  60:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  61:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  62:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** */
  63:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  64:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  65:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  66:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  67:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** #endif
  68:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  69:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  71:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     register.
  76:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  77:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
GAS LISTING /tmp/ccUEW0Hz.s 			page 5


  78:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     can be achieved.
  79:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** */
  80:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** void
  81:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** {
  83:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 		"brne 1b"
  86:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 	);
  89:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** }
  90:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  91:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  93:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     counter register pair.
  98:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  99:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****  */
 102:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** void
 103:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** {
 105:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 136               		.stabn	68,0,105,.LM3-.LFBB1
 137               	.LM3:
 138 0020 80E2      		ldi r24,lo8(20000)
 139 0022 9EE4      		ldi r25,hi8(20000)
 140               	/* #APP */
 141               	 ;  105 "/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h" 1
 142 0024 0197      		1: sbiw r24,1
 143 0026 01F4      		brne 1b
 144               	 ;  0 "" 2
 145               	/* #NOAPP */
 146               	.LBE21:
 147               	.LBE20:
 148               	.LBE19:
 149               	.LBE18:
 150               		.stabs	"test.c",132,0,0,.Ltext2
 151               	.Ltext2:
  13:test.c        **** 	_delay_ms(5); // The HMC5843 needs 5ms before it will communicate
  14:test.c        **** 	//	hmc_init();
  15:test.c        **** 	hmc_init();
 152               		.stabn	68,0,15,.LM4-.LFBB1
 153               	.LM4:
 154 0028 0E94 0000 		call hmc_init
  16:test.c        **** 	sei(); /* enable interrupts */
 155               		.stabn	68,0,16,.LM5-.LFBB1
 156               	.LM5:
 157               	/* #APP */
 158               	 ;  16 "test.c" 1
 159 002c 7894      		sei
 160               	 ;  0 "" 2
GAS LISTING /tmp/ccUEW0Hz.s 			page 6


  17:test.c        **** 
  18:test.c        **** 	while (1) {
  19:test.c        **** 		x = adc_get(0);
  20:test.c        **** 		y = adc_get(1);
  21:test.c        **** 		z = adc_get(2);
  22:test.c        **** 		printf("x: %d\ny: %d\nz: %d\n", x, y, z);
 161               		.stabn	68,0,22,.LM6-.LFBB1
 162               	.LM6:
 163               	/* #NOAPP */
 164 002e 80E0      		ldi r24,lo8(.LC0)
 165 0030 C82E      		mov r12,r24
 166 0032 80E0      		ldi r24,hi8(.LC0)
 167 0034 D82E      		mov r13,r24
 168               	.LBB22:
 169               	.LBB23:
 170               	.LBB24:
 171               	.LBB25:
 172               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext3
 173               	.Ltext3:
 174               		.stabn	68,0,105,.LM7-.LFBB1
 175               	.LM7:
 176 0036 C0E9      		ldi r28,lo8(400)
 177 0038 D1E0      		ldi r29,hi8(400)
 178               	.L3:
 179               	.LBE25:
 180               	.LBE24:
 181               	.LBE23:
 182               	.LBE22:
 183               		.stabs	"test.c",132,0,0,.Ltext4
 184               	.Ltext4:
  19:test.c        **** 		x = adc_get(0);
 185               		.stabn	68,0,19,.LM8-.LFBB1
 186               	.LM8:
 187 003a 80E0      		ldi r24,lo8(0)
 188 003c 0E94 0000 		call adc_get
 189 0040 7C01      		movw r14,r24
  20:test.c        **** 		y = adc_get(1);
 190               		.stabn	68,0,20,.LM9-.LFBB1
 191               	.LM9:
 192 0042 81E0      		ldi r24,lo8(1)
 193 0044 0E94 0000 		call adc_get
 194 0048 8C01      		movw r16,r24
  21:test.c        **** 		z = adc_get(2);
 195               		.stabn	68,0,21,.LM10-.LFBB1
 196               	.LM10:
 197 004a 82E0      		ldi r24,lo8(2)
 198 004c 0E94 0000 		call adc_get
 199               		.stabn	68,0,22,.LM11-.LFBB1
 200               	.LM11:
 201 0050 2DB7      		in r18,__SP_L__
 202 0052 3EB7      		in r19,__SP_H__
 203 0054 2850      		subi r18,lo8(-(-8))
 204 0056 3040      		sbci r19,hi8(-(-8))
 205 0058 0FB6      		in __tmp_reg__,__SREG__
 206 005a F894      		cli
 207 005c 3EBF      		out __SP_H__,r19
 208 005e 0FBE      		out __SREG__,__tmp_reg__
GAS LISTING /tmp/ccUEW0Hz.s 			page 7


 209 0060 2DBF      		out __SP_L__,r18
 210 0062 EDB7      		in r30,__SP_L__
 211 0064 FEB7      		in r31,__SP_H__
 212 0066 3196      		adiw r30,1
 213 0068 ADB7      		in r26,__SP_L__
 214 006a BEB7      		in r27,__SP_H__
 215 006c 1296      		adiw r26,1+1
 216 006e DC92      		st X,r13
 217 0070 CE92      		st -X,r12
 218 0072 1197      		sbiw r26,1
 219 0074 F382      		std Z+3,r15
 220 0076 E282      		std Z+2,r14
 221 0078 1583      		std Z+5,r17
 222 007a 0483      		std Z+4,r16
 223 007c 9783      		std Z+7,r25
 224 007e 8683      		std Z+6,r24
 225 0080 0E94 0000 		call printf
 226 0084 88EE      		ldi r24,lo8(1000)
 227 0086 93E0      		ldi r25,hi8(1000)
 228 0088 2DB7      		in r18,__SP_L__
 229 008a 3EB7      		in r19,__SP_H__
 230 008c 285F      		subi r18,lo8(-(8))
 231 008e 3F4F      		sbci r19,hi8(-(8))
 232 0090 0FB6      		in __tmp_reg__,__SREG__
 233 0092 F894      		cli
 234 0094 3EBF      		out __SP_H__,r19
 235 0096 0FBE      		out __SREG__,__tmp_reg__
 236 0098 2DBF      		out __SP_L__,r18
 237               	.L2:
 238               	.LBB29:
 239               	.LBB28:
 240               	.LBB27:
 241               	.LBB26:
 242               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h",132,0,0,.Ltext5
 243               	.Ltext5:
 244               		.stabn	68,0,105,.LM12-.LFBB1
 245               	.LM12:
 246 009a FE01      		movw r30,r28
 247               	/* #APP */
 248               	 ;  105 "/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h" 1
 249 009c 3197      		1: sbiw r30,1
 250 009e 01F4      		brne 1b
 251               	 ;  0 "" 2
 252               	/* #NOAPP */
 253               	.LBE26:
 254               	.LBE27:
 255               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h",132,0,0,.Ltext6
 256               	.Ltext6:
   1:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
   6:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
   9:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
GAS LISTING /tmp/ccUEW0Hz.s 			page 8


  10:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  12:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      distribution.
  16:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  17:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  21:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  33:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /* $Id: delay.h,v 1.5.2.1 2009/02/25 10:14:03 joerg_wunsch Exp $ */
  34:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  35:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  38:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #include <inttypes.h>
  39:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  40:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  41:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /** \file */
  42:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  43:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     \code
  44:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  45:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  46:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     #include <util/delay.h>
  47:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     \endcode
  48:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  49:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  50:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  51:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  52:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     used.
  53:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  54:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  55:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  56:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  57:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  58:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  59:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  60:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  61:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  62:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  63:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  64:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  65:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  66:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
GAS LISTING /tmp/ccUEW0Hz.s 			page 9


  67:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  68:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  69:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  70:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     routines linked into the application.
  71:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  72:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  73:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  74:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  75:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  76:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** */
  77:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  78:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  79:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  80:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  81:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #endif
  82:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  83:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #ifndef F_CPU
  84:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  85:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  86:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  87:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #endif
  88:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  89:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  90:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  91:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #endif
  92:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  93:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /**
  94:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    \ingroup util_delay
  95:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  96:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
  97:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  98:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
  99:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 100:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
 101:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 102:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
 103:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 104:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 105:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 106:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 107:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 108:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****  */
 109:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** void
 110:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 111:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** {
 112:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 113:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 4e3) * __ms;
 114:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 115:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		__ticks = 1;
 116:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 	else if (__tmp > 65535)
 117:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 	{
 118:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 119:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 120:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		while(__ticks)
 121:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		{
 122:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 			// wait 1/10 ms
 123:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
GAS LISTING /tmp/ccUEW0Hz.s 			page 10


 124:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 			__ticks --;
 257               		.stabn	68,0,124,.LM13-.LFBB1
 258               	.LM13:
 259 00a0 0197      		sbiw r24,1
 120:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		while(__ticks)
 260               		.stabn	68,0,120,.LM14-.LFBB1
 261               	.LM14:
 262 00a2 01F4      		brne .L2
 263 00a4 00C0      		rjmp .L3
 264               	.LBE28:
 265               	.LBE29:
 266               		.size	main, .-main
 267               		.stabs	"x:r(4,4)",64,0,10,14
 268               		.stabs	"y:r(4,4)",64,0,10,16
 269               		.stabn	192,0,0,.LFBB1-.LFBB1
 270               		.stabs	"__ticks:r(4,4)",64,0,112,24
 271               		.stabn	192,0,0,.LBB23-.LFBB1
 272               		.stabs	"__count:r(4,4)",64,0,123,30
 273               		.stabn	192,0,0,.LBB24-.LFBB1
 274               		.stabn	224,0,0,.LBE24-.LFBB1
 275               		.stabs	"__count:r(4,4)",64,0,123,30
 276               		.stabn	192,0,0,.LBB27-.LFBB1
 277               		.stabn	224,0,0,.LBE27-.LFBB1
 278               		.stabn	224,0,0,.LBE23-.LFBB1
 279               		.stabs	"__ticks:r(4,4)",64,0,112,24
 280               		.stabn	192,0,0,.LBB28-.LFBB1
 281               		.stabn	224,0,0,.LBE28-.LFBB1
 282               		.stabn	224,0,0,.Lscope1-.LFBB1
 283               	.Lscope1:
 284               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 285               		.stabd	78,0,0
 286               		.text
 287               		.stabs	"",100,0,0,.Letext0
 288               	.Letext0:
 289               	.global __do_copy_data
GAS LISTING /tmp/ccUEW0Hz.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 test.c
     /tmp/ccUEW0Hz.s:2      *ABS*:0000003f __SREG__
     /tmp/ccUEW0Hz.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccUEW0Hz.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccUEW0Hz.s:5      *ABS*:00000034 __CCP__
     /tmp/ccUEW0Hz.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccUEW0Hz.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccUEW0Hz.s:105    .text.main:00000000 main

UNDEFINED SYMBOLS
serial_init
serial_putchar
serial_getchar
fdevopen
hmc_init
adc_get
printf
__do_copy_data
