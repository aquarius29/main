Description:
------------
An example usage of the extended scheduler process manager.

The program creates two processes from two modules 
(../include/sched_proc_test.c and ../include/sched_proc_test.c).

Pointers of the modules' init and run functions are passed to the process, 
the processes created are added to a global poll, which is as well, initialized before using init_pool().

when the poll is run, the run functions of each process attached to the poll is executed on a single forked process.

Data is shared between processes using (sm) a library based on the IPC Shared Memory, 
states of each process are saved on a unique area within the shared memory.

proc_write_state is used for writing a state to the shared memory set for a specific group id.
proc_read_state is used for reading a group's state.

* libraries of each process should be generated and used instead of *.c files.

Installation: 
--------------

1. Run 'make & make install' 
2. ./example_usage
